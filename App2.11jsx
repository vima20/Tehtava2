import React, { useState, useEffect } from 'react';
import axios from 'axios';

// Filter Component
const Filter = ({ searchQuery, handleSearchChange }) => {
  return React.createElement('div', null,
    'filter shown with ',
    React.createElement('input', { value: searchQuery, onChange: handleSearchChange })
  );
};

// PersonForm Component
const PersonForm = ({ newName, newNumber, handleNameChange, handleNumberChange, addPerson }) => {
  return React.createElement('form', { onSubmit: addPerson },
    React.createElement('div', null,
      'name: ',
      React.createElement('input', { value: newName, onChange: handleNameChange })
    ),
    React.createElement('div', null,
      'number: ',
      React.createElement('input', { value: newNumber, onChange: handleNumberChange })
    ),
    React.createElement('div', null,
      React.createElement('button', { type: 'submit' }, 'add')
    )
  );
};

// Persons Component
const Persons = ({ personsToShow }) => {
  return React.createElement('ul', null,
    personsToShow.map(person =>
      React.createElement('li', { key: person.id }, `${person.name} ${person.number}`)
    )
  );
};

// App Component
const App = () => {
  const [persons, setPersons] = useState([]);
  const [newName, setNewName] = useState('');
  const [newNumber, setNewNumber] = useState('');
  const [searchQuery, setSearchQuery] = useState('');

  useEffect(() => {
    axios
      .get('http://localhost:3001/persons')
      .then(response => {
        setPersons(response.data);
      });
  }, []);

  const handleNameChange = (event) => {
    setNewName(event.target.value);
  };

  const handleNumberChange = (event) => {
    setNewNumber(event.target.value);
  };

  const handleSearchChange = (event) => {
    setSearchQuery(event.target.value);
  };

  const addPerson = (event) => {
    event.preventDefault();

    const existingPerson = persons.find(person => person.name === newName);
    if (existingPerson) {
      alert(`${newName} is already added to phonebook`);
      return;
    }

    const personObject = {
      name: newName,
      number: newNumber
    };

    axios
      .post('http://localhost:3001/persons', personObject)
      .then(response => {
        setPersons([...persons, response.data]);
        setNewName('');
        setNewNumber('');
      });
  };

  const personsToShow = persons.filter(person =>
    person.name.toLowerCase().includes(searchQuery.toLowerCase())
  );

  return React.createElement('div', null,
    React.createElement('h2', null, 'Phonebook'),
    React.createElement(Filter, { searchQuery, handleSearchChange }),
    React.createElement('h3', null, 'Add a new'),
    React.createElement(PersonForm, {
      newName,
      newNumber,
      handleNameChange,
      handleNumberChange,
      addPerson
    }),
    React.createElement('h3', null, 'Numbers'),
    React.createElement(Persons, { personsToShow })
  );
};

export default App;
